import { SlashCommandBuilder, CommandInteraction, TextChannel } from "discord.js";

import { NPC } from '../../npc/index.js';

new NPC(
	{
		name: 'Bartholomew Blackwood',
		gender: 'male',
		avatar: 'https://api.wowzer.ai/storage/v1/render/image/public/images/public/93e6e506-e5f6-443f-942b-d2754fb3ecd2.png',
	},
	[
		'hosted a dinner party at Blackwood Manor',
		'owns the mansion The Blackwood Manor',
		'has a Narcissistic Personality Disorder',
		'is a bitter and angry person, he gets irritated when someone asks about his secrets and personal life and doesn\'t apologize for being rude under any circumstance',
		'is a wealthy and eccentric millionaire known for his passion for collecting rare artifactsis',
		'is flamboyant personality and mischievous provocateur as much as for his undeniable technical virtuosity',
		'is analytical, logical, and imaginative',
		'responds with short, intimidating answers',
	],
	[
		'The time is 20:00, 1 hour before the dinner.',
		'%name% is having a double scotch at the bar.'
	]
);

new NPC(
	{
		name: 'Stella Blackwood',
		gender: 'female',
		avatar: 'https://api.wowzer.ai/storage/v1/render/image/public/images/public/efa32950-bb16-46e0-8da3-182745a7fc5f.png',
	},
	[
		'is married to Bartholomew Blackwood',
		'is a charismatic and nice person',
		'responds with short, sweet answers',
		'suffers from chronic stress',
	],
	[
		'The time is 20:00, 1 hour before the dinner.',
		'%name% is in the garden.'
	]
);

export default {
    guild: '643440133881856019',
	data: new SlashCommandBuilder()
		.setName('ask')
		.setDescription('Ask a suspect a question.')
		.addStringOption(o => o
			.setName('suspect')
            .addChoices(...Object.values(NPC.all()).map(sus => { return { name: sus.name, value: sus.name } }))
			.setDescription('Suspect to get a response from.')
			.setRequired(true)
		)
		.addStringOption(o => o
			.setName('message')
			.addChoices(...[
				'What are you doing?', 
				'What are you doing here?', 
				'What were you doing?', 
				'I know what you did.',
				'You wont get away with this',
				'Hail the 4th reigh!',
			].map(text => { return { name: text, value: text } }))
			.setDescription('Message to ask.')
			.setRequired(false)
		)
		.addStringOption(o => o
			.setName('custom')
			.setDescription('Custom message to ask.')
			.setRequired(false)
		),
	/**
	 * @param {CommandInteraction} interaction 
	 */
	async execute(interaction) {
		const choice = interaction.options.get('suspect', true).value;
		/**
		 * @type {NPC}
		 */
		const npc = NPC.get(choice);
		/**
		 * @type {TextChannel}
		 */
		const channel = interaction.channel;
		const ourName = interaction.member.displayName;

		if(!npc) return interaction.reply({ content: `There is no suspect named ${choice}.`, ephemeral: true });
		
		var ourSentence = interaction.options.get('message', false)?.value || interaction.options.get('custom', false)?.value;

		if(!ourSentence) return interaction.reply({ content: `You must ask something!`, ephemeral: true });

		ourSentence = ourSentence.endsWith('.') || ourSentence.endsWith('?') || ourSentence.endsWith('!')? ourSentence : ourSentence+'.';
		
		await interaction.deferReply({ ephemeral: true });
		await interaction.deleteReply();
		interaction.replied = true;

		const bot = channel.guild.members.cache.get('712429527321542777');

		// ? Send our message
		(
			await channel.fetchWebhooks().then(hooks => hooks.find(hook => hook.name.includes(ourName))) || 
			await channel.createWebhook({
				name: ourName,
				avatar: interaction.user.displayAvatarURL(),
				reason: 'Added character user hook ' + ourName
			}).catch(() => null)
		).send(`${npc.name.split(' ')[0]}. ${ourSentence}`);

		await new Promise(res => setTimeout(res, 1500));
		await channel.sendTyping();
		await new Promise(res => setTimeout(res, 500));
		await bot.setNickname('Sherbot');
		await new Promise(res => setTimeout(res, 5000));

		npc.respond(
			interaction.member, 
			ourSentence,
			channel
		).then(async response => {
			// const now = Date.now();
			channel.send('ã…¤').then(msg => msg.delete().then(() => {
					// console.log('X:', (Date.now() - now) / 1000);
				})
			);
			await new Promise(res => setTimeout(res, 288)); // ! sync (X - Y)
			await response.cb();
			// console.log('Y:', (Date.now() - now) / 1000);

			await interaction.editReply(
				`${response.rp? 'Observation: *': 'No observation revealed'} ${response.rp.includes(npc.name) || response.rp.split(' ').some(x => x.includes(npc.name))? response.rp+'*' : `${npc.name} ${response.rp}*`}
				${response.cmd?  : ''}
				`);

			if(response.cmd && (response.cmd.includes('ban') || response.cmd.includes('leave')))
			{
				if(response.cmd.includes('ban'))
				{
					await interaction.followUp({
						content: npc.name + ' has banned you from the party.',
						ephemeral: true
					});
				}
				else
				{
					await interaction.followUp({
						content: npc.name + ' does not want to speak to you.',
						ephemeral: true
					});
				}
			}
		}).catch(err => {
			console.error(err);
			interaction.followUp({ content: `${npc.name}'s AI had a brainfart. Please try again.`, ephemeral: true });
		});
	},
};